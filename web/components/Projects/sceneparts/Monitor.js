"use client"
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Mustafa Ã–zgen (https://sketchfab.com/mustafaozgen)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/3d-pbr-dirty-cracked-sci-fi-monitor-c680a8bca5a841f19c3b1d56939ac2bf
Title: 3D PBR Dirty Cracked Sci-Fi Monitor
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

export function Monitor(props) {
  const { nodes, materials } = useGLTF("../models/monitor.glb");
  return (
    <group {...props} dispose={null} scale={0.6}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.013}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Back_back_0.geometry}
            material={materials.back}
            position={[0, 0, -17.128]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Frame_frame_0.geometry}
            material={materials.frame}
            position={[0, 0, -7.799]}
          >

            <meshStandardMaterial
                      emissive={"#0c8cbf"}
                      emissiveIntensity={8}
                      wireframe={true}
                      toneMapped={false}
                      />
          </mesh>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.InFrame_inframe_0.geometry}
            material={materials.inframe}
            position={[0, 0, -1]}
          >

          </mesh>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.FrontPlastic_plastic_0.geometry}
            material={materials.plastic}
            position={[0, 0, 0.2]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Screen_screen_0.geometry}
            material={materials.screen}
            position={[0, 0, -2.306]}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("models/monitor.glb");
